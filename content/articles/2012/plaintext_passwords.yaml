title: "If you had to store plaintext passwords..."
date: 2012-02-01
hidden: true
content: |
    <div class="alert alert-error">
      Let me just preface all this with one simple concept: <b>Don't do plaintext passwords</b>.
    </div>

    Plaintext passwords are like drugs. Actually, they're worse than drugs. They're like <em>hydrochloric</em> acid.
    Coming into contact with them is dangerous enough and on top of that they're liable to leak their way through most things you put them in.

    Having said that, what if you needed to store plaintext passwords? What if you had no choice?
    These sorts of situations do exist, as much as you'd like to fight them.

    Programmers love interfacing with other services. Sadly many services don't give you things like access tokens.
    This leaves you with only one way to get access to what you need.

    _Username_...  
    _Password_...

    If whoever you're interfacing with is receptive, they may well add access tokens when you register your interest.
    Many places aren't receptive though -- in fact, it'd be negative to their business to be receptive.
    If the company you're talking to have nothing to gain, chances are they're not going to put in any effort.

    If your idea is good enough though, being forced to store plaintext passwords won't stop you.
    It could even be due to the fact that you're trying to liberate a client's data from an evil and over-reaching service.
    Indeed, your customers deserve to know that you need to store plaintext passwords.
    If the technologically competent customers are still willing to give you their password, then the problem you're solving must be important.

    ## Can this be secure?

    The plain, simple truth is that storing plaintext passwords is a huge vulnerability.
    You can't genuinely make the passwords secure and use them at the same time.
    History is littered with failed cases that don't even involve plaintext.
    History is also littered with enough plaintext to fill a library.

    At the very least, you'd hope that the passwords were encrypted in some manner.
    The only problem is, _this doesn't make it that much more secure_.

    + Each password is small -- only a few characters -- and there will be a lot of them
    + Highly vulnerable to crib attacks

    ## A Theoretical Approach
